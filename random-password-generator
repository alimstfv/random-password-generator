import random as ran
import string as st
import os
settings={
    "lower" : True,
    "upper" : True,
    "symbol" : True,
    "number" : True,
    "space" : False,
    "length" : 8
    }
def get_upper_case():
    return ran.choice(st.ascii_uppercase)
def get_lower_case():
    return ran.choice(st.ascii_lowercase)
def get_symbol():
    return ran.choice("""~`!@#$%^&*()_+=';"?\/.,><}{][""")
def get_number():
    return ran.choice("1234567890")                                                      
def get_random_char(choices):
    choice=ran.choice(choices)
    if choice =="upper":
        return get_upper_case()
    if choice == "lower":
        return get_lower_case()
    if choice =="number":
        return get_number()
    if choice == "symbol":
        return get_symbol()
def get_password_length(option,defult,min_pass=4,max_pass=30):
    while True:
        password_user_length=input("include "
                                   f"{option} ? defult is {defult} (enter:defult):")
        if password_user_length=="":
            return defult
        if password_user_length.isdigit() and min_pass<=int(password_user_length)<=max_pass:
            return int(password_user_length)
        print("invalid password.try again.")
def get_yes_or_no(defult, option):
    while True:
        user_input=input("include "
                         f"{option} ? defult is {defult} (y:yes , n:no , enter:defult):").lower()
        if user_input == "":
            return defult
                
        if user_input in ["y","n"]:
            return user_input =="y"
                
        print("invalid input.try again")
def get_settings(settings):
    for option,defult in settings.items():
        if option != "length":  
            user_choice=get_yes_or_no(defult, option)
            settings[option]=user_choice
        else:
            password_length=get_password_length(option, defult)
            settings[option]=password_length
def password_generatoe(settings):
    
    choice=list(filter(lambda x:settings[x]== True,["lower","upper","symbol","number","space"]))
    password_length=settings["length"]
    final_password=""
    for i in range(password_length):
        final_password+=get_random_char(choice)
    return final_password
def change_password_setting():
    while True:
        change_setting=input("if you want to change settings?(y , enter : yes,n:no)")
        if change_setting in ["y","n",""]:
            if change_setting  == "n":
                return False
            return True
        else:
            print("invalid input") 
def run_agian():
    while True:
        print(password_generatoe(settings))
        
        genrate_password_again=input("if you want generate password again(y and enter:yes"
                                     "n:no):")    
        if genrate_password_again == "n":
            break
def run_passwrd_generator():
    
    if change_password_setting() == False:
        password_generatoe(settings)
    else :
        get_settings(settings)
    run_agian()


os.system("cls")
run_passwrd_generator()
